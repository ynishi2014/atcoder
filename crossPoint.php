<?php

/**
 * 2点($x1,$y1)-($x2,$y2)を通る直線と
 * 2点($x3,$y3)-($x4,$y4)を通る直線の交点を返す
 * 
 * 返り値　
 * 　2直線が並行の場合: false
 * 　2直線が並行でない場合: [交点のx座標, 交点のy座標, 2直線ではなく線分であった場合に交点が存在するか否か]
 */
function getCrossPoint($x1, $y1, $x2, $y2, $x3, $y3, $x4, $y4){
  $dx1 = $x2 - $x1; $dy1 = $y2 - $y1;
  $dx2 = $x4 - $x3; $dy2 = $y4 - $y3;
  $bunbo = $dy1*$dx2-$dy2*$dx1;
  if($bunbo == 0)return false;//二直線が並行
  $x = $dx1*$dx2*($y3-$y1) + $dx2*$x1*$dy1 - $dx1*$x3*$dy2;
  $x /= $bunbo;
  if($dx1 != 0){//二直線は平行でないので、必ずどちらかはy軸に並行でなく、その直線を使うとx座標からy座標が求まる
    $y = $dy1/$dx1*($x-$x1)+$y1;
  }else{
    $y = $dy2/$dx2*($x-$x3)+$y3;
  }
  $isInside = ($dx1 != 0 ? (($x1 - $x) * ($x2 - $x) < 0) : ($y1 - $y) * ($y2 - $y) < 0)
    && ($dx2 != 0 ? (($x3 - $x) * ($x4 - $x) < 0) : ($y3 - $y) * ($y4 - $y) < 0);//内外判定・両端を含めない
  return [$x, $y, $isInside];
}
